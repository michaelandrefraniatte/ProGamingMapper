UsersAllowedList = new string[] { "michael113b", "mic113b" };
EnableXC         = true;
xcnumber         = 1;
EnableJI         = true;
double dzx       = 20.0f, dzy = 0.0f;
if (JoyconRightAccelX > 0f)
    mousex = Scale(JoyconRightAccelX, 0f, 1024f, (dzx / 100f) * 1024f, 1024f);
if (JoyconRightAccelX < 0f)
    mousex = Scale(JoyconRightAccelX, -1024f, 0f, -1024f, -(dzx / 100f) * 1024f);
if (JoyconRightAccelY > 0f)
    mousey = Scale(JoyconRightAccelY, 0f, 1024f, (dzy / 100f) * 1024f, 1024f);
if (JoyconRightAccelY < 0f)
    mousey = Scale(JoyconRightAccelY, -1024f, 0f, -1024f, -(dzy / 100f) * 1024f);
controller1_send_leftstickx   = -mousex * 32767f / 1024f;
controller1_send_leftsticky   = mousey * 32767f / 1024f;
mousex       = JoyconRightStickY * 1400f;
mousey       = JoyconRightStickX * 1400f;
controller1_send_rightstickx  = Math.Abs(-mousex * 32767f / 1024f) <= 32767f ? -mousex * 32767f / 1024f : Math.Sign(-mousex) * 32767f;
controller1_send_rightsticky  = Math.Abs(-mousey * 32767f / 1024f) <= 32767f ? -mousey * 32767f / 1024f : Math.Sign(-mousey) * 32767f;
controller1_send_A            = JoyconRightButtonHOME;
controller1_send_lefttrigger  = JoyconRightButtonDPAD_RIGHT;
controller1_send_righttrigger = JoyconRightButtonDPAD_UP;
controller1_send_Y            = JoyconRightButtonDPAD_LEFT;
controller1_send_back         = JoyconRightButtonDPAD_DOWN;
controller1_send_start        = JoyconRightButtonPLUS;
controller1_send_rightstick   = JoyconRightButtonSTICK;
controller1_send_leftbumper   = JoyconRightButtonSHOULDER_1;
controller1_send_rightbumper  = JoyconRightButtonSHOULDER_2;
controller1_send_B            = JoyconRightButtonSL;
controller1_send_X            = JoyconRightButtonSR;